- name: install maven
  ansible.builtin.yum:
    name: maven
    state: latest

- name: adding user
  ansible.builtin.user:
     name: roboshop

- name: Creating app directory
  ansible.builtin.file:
        path: /app
        state: directory

#- name: download app and unzipping
#  ansible.builtin.unarchive:
#    src: https://roboshop-artifacts.s3.amazonaws.com/shipping.zip
#        dest: /app
#        remote_src: yes

- name: download app and unzipping from nexus
  ansible.builtin.unarchive:
    src: http://54.88.42.193:8081/repository/shipping/shipping-1.0.0.zip
    dest: /app
    remote_src: yes
  vars:
      nexususer: "{{lookup('amazon.aws.aws_ssm','nexus.{{env}}.username',region='us-east-1')}}"
      nexuspassword: "{{lookup('amazon.aws.aws_ssm','nexus.{{env}}.password',region='us-east-1')}}"
      appversion: "{{lookup('amazon.aws.aws_ssm','{{component}}.{{env}}.appversion',region='us-east-1')}}"


- name: download maven  dependencies
  ansible.builtin.shell: mvn clean package ; mv target/shipping-1.0.jar shipping.jar
  args:
   chdir: /app
- name: setting hostname
  ansible.builtin.shell: set-hostname {{component}}

- name: Copying shipping service file
  ansible.builtin.template:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

- name: Start shipping service
  ansible.builtin.service:
    name: shipping
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: install mysql
  ansible.builtin.yum:
        name: mysql
        state: latest
  when: schema is defined

- name: load schema
  ansible.builtin.shell: mysql -h {{lookup('amazon.aws.aws_ssm','{{component}}.{{env}}.dbhost', region = 'us-east-1')}} -u{{ lookup('amazon.aws.aws_ssm','{{component}}.{{env}}.mysqluname', region = 'us-east-1')}} -p{{ lookup('amazon.aws.aws_ssm','{{component}}.{{env}}.mysqlpassword', region = 'us-east-1')}} < /app/schema/shipping.sql
  when: schema is defined

- name: reStart shipping service
  ansible.builtin.service:
        name: shipping
        state: restarted